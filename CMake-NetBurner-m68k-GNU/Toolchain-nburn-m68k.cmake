# This module is shared by multiple languages; use include blocker.
if(__NBURN_COMPILER_COMMON)
    return()
endif()
set(__NBURN_COMPILER_COMMON 1)

SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_VERSION 2)

SET(CMAKE_SYSTEM_PROCESSOR m68k)

SET(CMAKE_AR ${CMAKE_SYSTEM_PROCESSOR}-elf-ar)
SET(CMAKE_ASM-ATT_COMPILER_ID GNU)
SET(CMAKE_ASM-ATT_COMPILER ${CMAKE_SYSTEM_PROCESSOR}-elf-as)
SET(CMAKE_C_COMPILER_ID GNU)
SET(CMAKE_C_COMPILER ${CMAKE_SYSTEM_PROCESSOR}-elf-gcc)
SET(CMAKE_CXX_COMPILER_ID GNU)
SET(CMAKE_CXX_COMPILER ${CMAKE_SYSTEM_PROCESSOR}-elf-g++)
SET(CMAKE_OBJCOPY ${CMAKE_SYSTEM_PROCESSOR}-elf-objcopy)

if(DEFINED ENV{NBROOT})
    SET(NBURN_PATH $ENV{NBROOT})
else()
    SET(NBURN_PATH "C:/nburn")
endif()

SET(NBURN_PLATFORM "CB34EX" CACHE STRING "CB34EX or MOD5282")

if (NBURN_PLATFORM STREQUAL "CB34EX")
    SET(_NBURN_CPU "5234")
    SET(_NBURN_CPU_TYPE "MCF5234")
elseif (NBURN_PLATFORM STREQUAL "MOD5282")
    SET(_NBURN_CPU "5282")
    SET(_NBURN_CPU_TYPE "MCF5282")
else()
    message(SEND_ERROR "Unknown platform set: ${NBURN_PLATFORM}")
endif()

SET(NBURN_CPU ${_NBURN_CPU} CACHE STRING "5206e is most generic, 5234 for CB34EX, 5282 for MOD5282")
SET(NBURN_CPU_TYPE ${_NBURN_CPU_TYPE} CACHE STRING "MCF5234 for CB34EX, MCF5282 for MOD5282")

# doesn't seem to work
SET(CMAKE_STATIC_LIBRARY_SUFFIX ".a")
SET(CMAKE_ASM_OUTPUT_EXTENSIONS  ".o")
SET(CMAKE_C_OUTPUT_EXTENSIONS  ".o")
SET(CMAKE_CXX_OUTPUT_EXTENSION ".o")
SET(CMAKE_EXECUTABLE_SUFFIX ".elf")

SET(CMAKE_SYSROOT ${NBURN_PATH}/gcc-m68k/m68k-unknown-elf/sysroot)
#SET(CMAKE_FIND_ROOT_PATH ${NBURN_PATH}/gcc-m68k/bin;${NBURN_PATH}/pcbin;${CMAKE_SYSROOT})

string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT " -mcpu=${NBURN_CPU} -Wl,-n -T\"${NBURN_PATH}/${NBURN_PLATFORM}/lib/${NBURN_PLATFORM}.ld\" -Wl,-R\"${NBURN_PATH}/${NBURN_PLATFORM}/lib/sys.ld\"")

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# SET(CMAKE_MAKE_PROGRAM ${NBURN_PATH}/gcc-m68k/bin/make.exe)

set(CMAKE_SYSTEM_LIBRARY_PATH ${NBURN_PATH}/lib;${NBURN_PATH}/${NBURN_PLATFORM}/lib )
set(CMAKE_SYSTEM_PROGRAM_PATH ${NBURN_PATH}/gcc-m68k/bin;${NBURN_PATH}/pcbin )

macro(__nburn_compiler lang)
    string(APPEND CMAKE_${lang}_FLAGS_INIT " -falign-functions=4 -fmessage-length=0 -mcpu=${NBURN_CPU} -D${NBURN_PLATFORM} -D${NBURN_CPU_TYPE} -DNBMINGW -Wl,--gc-sections")
endmacro()

__nburn_compiler(C)
__nburn_compiler(CXX)
string(APPEND CMAKE_CXX_FLAGS_INIT " -fdata-sections -ffunction-sections")

string(APPEND CMAKE_ASM-ATT_FLAGS_INIT " -mcpu=${NBURN_CPU}")

set(CMAKE_USER_MAKE_RULES_OVERRIDE ${CMAKE_CURRENT_LIST_DIR}/CMakeOverrideDebugDwarf.txt)
